{"version":3,"sources":["contexts/ThemeContext.js","reducers/TodoReducer.js","contexts/TodoContext.js","components/AddTodo.js","components/ThemeToggle.js","components/SubTodoDetails.js","components/SubTodoList.js","components/TodoDetails.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","props","useState","isLightMode","light","todoColor","subColor","bgColor","dark","theme","setTheme","Provider","value","toggleTheme","document","getElementsByTagName","classList","toggle","children","TodoReducer","state","action","type","content","id","uuidv1","subTodos","filter","todo","map","editTodo","ids","mainId","subTodo","subId","editSubTodo","TodoContext","TodoContextProvider","useReducer","localData","localStorage","getItem","JSON","parse","todos","dispatch","useEffect","setItem","stringify","AddTodo","useContext","setContent","className","style","background","color","onSubmit","e","preventDefault","replace","required","placeholder","onChange","target","ThemeToggle","onClick","backgroundColor","SubTodoDetails","autoFocus","onDoubleClick","SubTodoList","length","key","TodoDetails","TodoList","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cba1d1f7.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react'\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n    const [theme, setTheme] = useState({\r\n        isLightMode: true,\r\n        light: {todoColor:'black', subColor:'rgb(51, 51, 51)', bgColor:'white'},\r\n        dark: {todoColor:'gray', subColor:'gray', bgColor:'rgb(51, 51, 51)'}\r\n    });\r\n    const toggleTheme = () => {\r\n        setTheme({\r\n            isLightMode: !theme.isLightMode,\r\n            light: {todoColor:'black', subColor:'rgb(51, 51, 51)', bgColor:'white'},\r\n            dark: {todoColor:'gray', subColor:'gray', bgColor:'rgb(51, 51, 51)'}\r\n        });\r\n        document.getElementsByTagName('body')[0].classList.toggle('darkMode')\r\n    }\r\n    return (\r\n        <ThemeContext.Provider value={{...theme, toggleTheme: toggleTheme}}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n    );\r\n}\r\n \r\nexport default ThemeContextProvider;","import { v1 as uuidv1 } from 'uuid';\r\n\r\nexport const TodoReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TODO':\r\n            return [...state, {\r\n                content: action.content,\r\n                id: uuidv1(),\r\n                subTodos: []\r\n            }]\r\n        case 'DELETE_TODO':\r\n            return state.filter(todo => todo.id !== action.id)\r\n        case 'EDIT_TODO':\r\n            return state.map(todo => {\r\n                if(todo.id === action.editTodo.id) {\r\n                    return todo = {content: action.editTodo.content, id: action.editTodo.id, subTodos: action.editTodo.subTodos}\r\n                } else {\r\n                    return todo\r\n                }\r\n            })\r\n        case 'ADD_SUBTODO':\r\n            return state.map(todo => {\r\n                if(todo.id === action.id) {\r\n                    return todo = {\r\n                        content: todo.content,\r\n                        id: todo.id,\r\n                        subTodos: [...todo.subTodos, {\r\n                            content: '',\r\n                            id: uuidv1()\r\n                        }]\r\n                    }\r\n                } else {\r\n                    return todo\r\n                }\r\n            })\r\n        case 'DELETE_SUBTODO':\r\n            return state.map(todo => {\r\n                if(todo.id === action.ids.mainId) {\r\n                    return todo = {\r\n                        content: todo.content,\r\n                        id: todo.id,\r\n                        subTodos: todo.subTodos.filter(subTodo => subTodo.id !== action.ids.subId)\r\n                    }\r\n                } else {\r\n                    return todo\r\n                }\r\n            })\r\n        case 'EDIT_SUBTODO':\r\n            return state.map(todo => {\r\n                if(todo.id === action.editSubTodo.mainId) {\r\n                    return todo = {\r\n                        content: todo.content,\r\n                        id: todo.id,\r\n                        subTodos: todo.subTodos.map(subTodo => {\r\n                            if(subTodo.id === action.editSubTodo.id) {\r\n                                return subTodo = {content: action.editSubTodo.content, id: action.editSubTodo.id}\r\n                            } else {\r\n                                return subTodo\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    return todo\r\n                }\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport { TodoReducer } from '../reducers/TodoReducer';\r\n\r\nexport const TodoContext = createContext();\r\n\r\nconst TodoContextProvider = (props) => {\r\n    const[todos, dispatch] = useReducer(TodoReducer, [], () => {\r\n        const localData = localStorage.getItem('todos');\r\n        return localData ? JSON.parse(localData) : [\r\n        {content: \"Implement sub-todo\", id:\"unique2\", \r\n            subTodos: [\r\n                {content: \"Like this\", id: \"unique2-1\"},\r\n                {content: \"Double click to add a sub-todo\", id: \"unique2-2\"}\r\n            ]},\r\n        {content: \"Animation for deleting (strikethorugh and fade)\", id:\"unique3\", \r\n            subTodos: [\r\n\r\n            ]},\r\n        {content: \"Drag and drop re-ordering\", id:\"unique4\", \r\n            subTodos: [\r\n\r\n            ]},\r\n        ];\r\n    });\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n    return (\r\n        <TodoContext.Provider value={{todos, dispatch}}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport default TodoContextProvider;","import React, { useState, useContext } from 'react';\r\nimport {ThemeContext} from '../contexts/ThemeContext';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\n\r\nconst AddTodo = (props) => {\r\n    const {dispatch} = useContext(TodoContext);\r\n    const [content, setContent] = useState('');\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //prevents todos with only whitespaces.\r\n        if(content.replace(/\\s/g, '') !== '') {\r\n            dispatch({type: 'ADD_TODO', content: content});\r\n            setContent('');\r\n        }\r\n    }\r\n    const {isLightMode, light, dark} = useContext(ThemeContext);\r\n    const theme = isLightMode ? light : dark;\r\n    return (\r\n        <div className='form' style={{ background: theme.bgColor, color: theme.subColor}}>\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <input required style={{ background: theme.bgColor, color: theme.subColor}} type=\"text\" className=\"userInput\" placeholder=\"Add a to do\" onChange={(e) => setContent(e.target.value)} value={content}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default AddTodo;","import React, { useContext } from 'react';\r\nimport {ThemeContext} from '../contexts/ThemeContext';\r\n\r\nconst ThemeToggle = () => {\r\n    const {toggleTheme, isLightMode, light, dark} = useContext(ThemeContext);\r\n    const theme = isLightMode ? light : dark;\r\n    return (\r\n        <span id=\"themeBtn\" onClick={toggleTheme} style={{backgroundColor: theme.subColor}}></span>\r\n    );\r\n}\r\n \r\nexport default ThemeToggle;","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst SubTodoDetails = ({subTodo, mainId}) => {\r\n    const {dispatch} = useContext(TodoContext);\r\n    const {isLightMode, light, dark} = useContext(ThemeContext);\r\n    const theme = isLightMode ? light : dark;\r\n    return (\r\n        <div className=\"subTodo\">\r\n            <span className=\"dragBtn\"></span>\r\n            <input style={{ background: theme.bgColor, color: theme.subColor}} \r\n                type=\"text\" className=\"dos\" \r\n                onChange={(e) => dispatch({type: 'EDIT_SUBTODO', editSubTodo: {content: e.target.value, id: subTodo.id, mainId: mainId}})} \r\n                value={subTodo.content} \r\n                autoFocus\r\n                onDoubleClick={() => dispatch({type: 'ADD_SUBTODO', id: mainId})}\r\n            />\r\n            <span className=\"deleteBtn\" onClick={() => dispatch({type:'DELETE_SUBTODO', ids:{mainId: mainId, subId: subTodo.id}})}>\r\n                &times;\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default SubTodoDetails;","import React, { useContext } from 'react';\r\nimport SubTodoDetails from './SubTodoDetails';\r\n\r\nconst SubTodoList = ({subTodos, mainId}) => {\r\n    return subTodos.length ? (\r\n        <div className=\"subTodoList\">\r\n            {subTodos.map(subTodo => {\r\n                return (<SubTodoDetails subTodo={subTodo} mainId={mainId} key={subTodo.id}/>);\r\n            })}\r\n        </div>\r\n    ) : (\r\n        <div></div>\r\n    );\r\n}\r\n \r\nexport default SubTodoList;","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport SubTodoList from './SubTodoList';\r\n\r\nconst TodoDetails = ({todo}) => {\r\n    const {dispatch} = useContext(TodoContext);\r\n    const {isLightMode, light, dark} = useContext(ThemeContext);\r\n    const theme = isLightMode ? light : dark;\r\n    return (\r\n        <div className=\"todo\" style={{ background: theme.bgColor, color: theme.todoColor}}>\r\n            <div className=\"mainTodo\">\r\n                <span className=\"dragBtn\"></span>\r\n                <input style={{ background: theme.bgColor, color: theme.todoColor}} \r\n                    type=\"text\" \r\n                    className=\"dos\" \r\n                    onChange={(e) => dispatch({type: 'EDIT_TODO', \r\n                        editTodo: {content: e.target.value, id: todo.id, subTodos: todo.subTodos}})}\r\n                    value={todo.content}\r\n                    onDoubleClick={() => dispatch({type: 'ADD_SUBTODO', id: todo.id})}\r\n                />\r\n                <span className=\"deleteBtn\" onClick={() => dispatch({type: 'DELETE_TODO', id: todo.id})}>\r\n                    &times;\r\n                </span>\r\n            </div>\r\n            <SubTodoList subTodos={todo.subTodos} mainId={todo.id}/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TodoDetails;","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport TodoDetails from './TodoDetails';\r\n\r\nconst TodoList = () => {\r\n    const {todos} = useContext(TodoContext);\r\n    return todos.length ? (\r\n        <div className=\"todoList\">\r\n            {todos.map(todo => {\r\n                return (<TodoDetails todo={todo} key={todo.id}/>);\r\n            })}\r\n        </div>\r\n    ) : (\r\n        <div className='todo center'>/ / /</div>\r\n    );\r\n}\r\n \r\nexport default TodoList;","import React, { useState } from 'react';\r\nimport AddTodo from './components/AddTodo';\r\nimport ThemeContextProvider from './contexts/ThemeContext';\r\nimport ThemeToggle from './components/ThemeToggle';\r\nimport './App.css';\r\nimport TodoList from './components/TodoList';\r\nimport TodoContextProvider from './contexts/TodoContext';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"todoApp\">\r\n      <ThemeContextProvider>\r\n        <h1>To dos</h1>\r\n        <ThemeToggle/>\r\n        <TodoContextProvider>\r\n          <div className=\"container\">\r\n            <TodoList/>\r\n          </div>\r\n          <AddTodo/>\r\n        </TodoContextProvider>\r\n      </ThemeContextProvider>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}