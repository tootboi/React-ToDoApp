{"version":3,"sources":["contexts/ThemeContext.js","reducers/TodoReducer.js","contexts/TodoContext.js","components/AddTodo.js","components/ThemeToggle.js","components/SubTodoOverlay.js","components/SubTodoDetails.js","components/SubTodoList.js","components/TodoOverlay.js","components/AddSubTodo.js","components/TodoDetails.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","props","useState","isLightMode","light","todoColor","subColor","bgColor","dark","theme","setTheme","Provider","value","toggleTheme","document","getElementsByTagName","classList","toggle","children","TodoReducer","state","action","type","content","id","uuidv1","subTodos","filter","todo","map","editTodo","createSubTodo","mainId","ids","subTodo","subId","editSubTodo","TodoContext","TodoContextProvider","useReducer","localData","localStorage","getItem","JSON","parse","todos","dispatch","useEffect","setItem","stringify","AddTodo","useContext","setContent","className","style","background","color","onSubmit","e","preventDefault","replace","required","placeholder","onChange","target","ThemeToggle","onClick","backgroundColor","SubTodoOverlay","newTodo","setTodo","overlayOff","getElementById","display","name","cols","rows","SubTodoDetails","focus","textarea","SubTodoList","length","key","TodoOverlay","AddSubTodo","TodoDetails","TodoList","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.83c2eae2.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react'\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n    const [theme, setTheme] = useState({\r\n        isLightMode: true,\r\n        light: {todoColor:'black', subColor:'rgb(51, 51, 51)', bgColor:'white'},\r\n        dark: {todoColor:'gray', subColor:'gray', bgColor:'rgb(51, 51, 51)'}\r\n    });\r\n    const toggleTheme = () => {\r\n        setTheme({\r\n            isLightMode: !theme.isLightMode,\r\n            light: {todoColor:'black', subColor:'rgb(51, 51, 51)', bgColor:'white'},\r\n            dark: {todoColor:'gray', subColor:'gray', bgColor:'rgb(51, 51, 51)'}\r\n        });\r\n        document.getElementsByTagName('body')[0].classList.toggle('darkMode')\r\n    }\r\n    return (\r\n        <ThemeContext.Provider value={{...theme, toggleTheme: toggleTheme}}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n    );\r\n}\r\n \r\nexport default ThemeContextProvider;","import { v1 as uuidv1 } from 'uuid';\r\n\r\nexport const TodoReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TODO':\r\n            return [...state, {\r\n                content: action.content,\r\n                id: uuidv1(),\r\n                subTodos: []\r\n            }]\r\n        case 'DELETE_TODO':\r\n            return state.filter(todo => todo.id !== action.id)\r\n        case 'EDIT_TODO':\r\n            return state.map(todo => {\r\n                if(todo.id === action.editTodo.id) {\r\n                    return todo = {content: action.editTodo.content, id: action.editTodo.id, subTodos: action.editTodo.subTodos}\r\n                } else {\r\n                    return todo\r\n                }\r\n            })\r\n        case 'ADD_SUBTODO':\r\n            return state.map(todo => {\r\n                if(todo.id === action.createSubTodo.mainId) {\r\n                    return todo = {\r\n                        content: todo.content,\r\n                        id: todo.id,\r\n                        subTodos: [...todo.subTodos, {\r\n                            content: action.createSubTodo.content,\r\n                            id: uuidv1()\r\n                        }]\r\n                    }\r\n                } else {\r\n                    return todo\r\n                }\r\n            })\r\n        case 'DELETE_SUBTODO':\r\n            return state.map(todo => {\r\n                if(todo.id === action.ids.mainId) {\r\n                    return todo = {\r\n                        content: todo.content,\r\n                        id: todo.id,\r\n                        subTodos: todo.subTodos.filter(subTodo => subTodo.id !== action.ids.subId)\r\n                    }\r\n                } else {\r\n                    return todo\r\n                }\r\n            })\r\n        case 'EDIT_SUBTODO':\r\n            return state.map(todo => {\r\n                if(todo.id === action.editSubTodo.mainId) {\r\n                    return todo = {\r\n                        content: todo.content,\r\n                        id: todo.id,\r\n                        subTodos: todo.subTodos.map(subTodo => {\r\n                            if(subTodo.id === action.editSubTodo.id) {\r\n                                return subTodo = {content: action.editSubTodo.content, id: action.editSubTodo.id}\r\n                            } else {\r\n                                return subTodo\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    return todo\r\n                }\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport { TodoReducer } from '../reducers/TodoReducer';\r\n\r\nexport const TodoContext = createContext();\r\n\r\nconst TodoContextProvider = (props) => {\r\n    const[todos, dispatch] = useReducer(TodoReducer, [], () => {\r\n        const localData = localStorage.getItem('todos');\r\n        return localData ? JSON.parse(localData) : [\r\n        {content: \"Add sub-todos by clicking on the bullet points\", id:\"unique2\", \r\n            subTodos: [\r\n                {content: \"Like this\", id: \"unique2-1\"},\r\n            ]},\r\n        {content: \"Edit todos by clicking on it\", id:\"unique3\", \r\n            subTodos: [\r\n                {content: \"Also edit sub-todos by clicking on it\", id: \"unique3-1\"},\r\n            ]},\r\n        ];\r\n    });\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n    return (\r\n        <TodoContext.Provider value={{todos, dispatch}}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport default TodoContextProvider;","import React, { useState, useContext } from 'react';\r\nimport {ThemeContext} from '../contexts/ThemeContext';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\n\r\nconst AddTodo = (props) => {\r\n    const {dispatch} = useContext(TodoContext);\r\n    const [content, setContent] = useState('');\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //prevents todos with only whitespaces.\r\n        if(content.replace(/\\s/g, '') !== '') {\r\n            dispatch({type: 'ADD_TODO', content: content});\r\n            setContent('');\r\n        }\r\n    }\r\n    const {isLightMode, light, dark} = useContext(ThemeContext);\r\n    const theme = isLightMode ? light : dark;\r\n    return (\r\n        <div className='form' style={{ background: theme.bgColor, color: theme.subColor}}>\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <input required style={{ background: theme.bgColor, color: theme.subColor}} type=\"text\" className=\"userInput\" placeholder=\"Add a to do\" onChange={(e) => setContent(e.target.value)} value={content}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default AddTodo;","import React, { useContext } from 'react';\r\nimport {ThemeContext} from '../contexts/ThemeContext';\r\n\r\nconst ThemeToggle = () => {\r\n    const {toggleTheme, isLightMode, light, dark} = useContext(ThemeContext);\r\n    const theme = isLightMode ? light : dark;\r\n    return (\r\n        <span id=\"themeBtn\" onClick={toggleTheme} style={{backgroundColor: theme.subColor}}></span>\r\n    );\r\n}\r\n \r\nexport default ThemeToggle;","import React, { useContext, useState } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst SubTodoOverlay = ({todo, mainId}) => {\r\n    const { dispatch } = useContext(TodoContext);\r\n    const [newTodo, setTodo] = useState(todo.content);\r\n    const {isLightMode, light, dark} = useContext(ThemeContext);\r\n    const theme = isLightMode ? light : dark;\r\n\r\n    const editTodo = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'EDIT_SUBTODO', editSubTodo: {content: newTodo, id: todo.id, mainId: mainId}});\r\n        overlayOff();\r\n    }\r\n    const overlayOff = (e) => {\r\n        document.getElementById('overlay'+todo.id).style.display = 'none';\r\n    }\r\n    return (\r\n        <div className=\"overlay\" style={{ background: theme.bgColor, color: theme.todoColor}}>\r\n            <div className=\"closeBtn\" onClick={overlayOff}>&otimes;</div>\r\n            <h2>edit sub-todo</h2>\r\n            <form action=\"\" onSubmit={editTodo}>\r\n                <textarea name=\"newTodo\" id=\"\" cols=\"30\" rows=\"10\" value={newTodo} onChange={(e) => setTodo(e.target.value)} required style={{color: theme.todoColor}}></textarea>\r\n                <input type=\"submit\" value=\"edit sub-todo\" style={{color: theme.todoColor}}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default SubTodoOverlay;","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport SubTodoOverlay from './SubTodoOverlay';\r\n\r\nconst SubTodoDetails = ({subTodo, mainId}) => {\r\n    const {dispatch} = useContext(TodoContext);\r\n    const {isLightMode, light, dark} = useContext(ThemeContext);\r\n    const theme = isLightMode ? light : dark;\r\n\r\n    const overlayOn = (e) => {\r\n        document.getElementById('overlay'+subTodo.id).style.display = 'block';\r\n        //these lines focus the cursor to the end of the textarea.\r\n        const textarea = document.getElementById('overlay'+subTodo.id).children[0].children[2].children[0];\r\n        textarea.value = '';\r\n        textarea.value = subTodo.content;\r\n        textarea.focus();\r\n    }\r\n    const addSubTodo = (e) => {\r\n        document.getElementById('createSub'+mainId).style.display = 'block';\r\n        //focuses overlay textarea\r\n        document.getElementById('createSub'+mainId).children[0].children[2].children[0].focus();\r\n    }\r\n    return (\r\n        <div className=\"subTodo\">\r\n            <div className=\"overlayContainer\">\r\n                <div id={'overlay'+subTodo.id}>\r\n                    <SubTodoOverlay todo={subTodo} mainId={mainId}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"subTodoContainer\" style={{ background: theme.bgColor, color: theme.todoColor}}>\r\n                <span className=\"dragBtn\" onClick={addSubTodo}></span>\r\n                <span className='todoContent' onClick={overlayOn}>{subTodo.content}</span> \r\n                <span className=\"deleteBtn\" onClick={() => dispatch({type:'DELETE_SUBTODO', ids:{mainId: mainId, subId: subTodo.id}})}>\r\n                    &times;\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default SubTodoDetails;","import React, { useContext } from 'react';\r\nimport SubTodoDetails from './SubTodoDetails';\r\n\r\nconst SubTodoList = ({subTodos, mainId}) => {\r\n    return subTodos.length ? (\r\n        <div className=\"subTodoList\">\r\n            {subTodos.map(subTodo => {\r\n                return (<SubTodoDetails subTodo={subTodo} mainId={mainId} key={subTodo.id}/>);\r\n            })}\r\n        </div>\r\n    ) : (\r\n        <div></div>\r\n    );\r\n}\r\n \r\nexport default SubTodoList;","import React, { useContext, useState } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst TodoOverlay = ({todo}) => {\r\n    const { dispatch } = useContext(TodoContext);\r\n    const [newTodo, setTodo] = useState(todo.content);\r\n    const {isLightMode, light, dark} = useContext(ThemeContext);\r\n    const theme = isLightMode ? light : dark;\r\n\r\n    const editTodo = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'EDIT_TODO', editTodo: {content: newTodo, id: todo.id, subTodos: todo.subTodos}});\r\n        overlayOff();\r\n    }\r\n    const overlayOff = (e) => {\r\n        document.getElementById('overlay'+todo.id).style.display = 'none';\r\n    }\r\n    return (\r\n        <div className=\"overlay\" style={{ background: theme.bgColor, color: theme.todoColor}}>\r\n            <div className=\"closeBtn\" onClick={overlayOff}>&otimes;</div>\r\n            <h2>edit todo</h2>\r\n            <form action=\"\" onSubmit={editTodo}>\r\n                <textarea name=\"newTodo\" id=\"\" cols=\"30\" rows=\"10\" value={newTodo} onChange={(e) => setTodo(e.target.value)} required style={{color: theme.todoColor}}></textarea>\r\n                <input type=\"submit\" value=\"edit todo\" style={{color: theme.todoColor}}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TodoOverlay;","import React, { useContext, useState } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst AddSubTodo = ({id}) => {\r\n    const { dispatch } = useContext(TodoContext);\r\n    const [newTodo, setTodo] = useState('');\r\n    const {isLightMode, light, dark} = useContext(ThemeContext);\r\n    const theme = isLightMode ? light : dark;\r\n\r\n    const createSubTodo = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'ADD_SUBTODO', createSubTodo: {content: newTodo, mainId: id}});\r\n        setTodo('');\r\n        overlayOff();\r\n    }\r\n    const overlayOff = (e) => {\r\n        document.getElementById('createSub'+id).style.display = 'none';\r\n    }\r\n    return (\r\n        <div className=\"overlay\" style={{ background: theme.bgColor, color: theme.todoColor}}>\r\n            <div className=\"closeBtn\" onClick={overlayOff}>&otimes;</div>\r\n            <h2>create sub-todo</h2>\r\n            <form action=\"\" onSubmit={createSubTodo}>\r\n                <textarea name=\"newTodo\" id=\"\" cols=\"30\" rows=\"10\" value={newTodo} onChange={(e) => setTodo(e.target.value)} required style={{color: theme.todoColor}}></textarea>\r\n                <input type=\"submit\" value=\"create sub-todo\" style={{color: theme.todoColor}}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default AddSubTodo;","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport SubTodoList from './SubTodoList';\r\nimport TodoOverlay from './TodoOverlay';\r\nimport AddSubTodo from './AddSubTodo';\r\n\r\nconst TodoDetails = ({todo}) => {\r\n    const {dispatch} = useContext(TodoContext);\r\n    const {isLightMode, light, dark} = useContext(ThemeContext);\r\n    const theme = isLightMode ? light : dark;\r\n\r\n    const overlayOn = (e) => {\r\n        document.getElementById('overlay'+todo.id).style.display = 'block';\r\n        //these lines focus the cursor to the end of the textarea.\r\n        const textarea = document.getElementById('overlay'+todo.id).children[0].children[2].children[0];\r\n        textarea.value = '';\r\n        textarea.value = todo.content;\r\n        textarea.focus();\r\n    }\r\n    const addSubTodo = (e) => {\r\n        document.getElementById('createSub'+todo.id).style.display = 'block';\r\n        //focuses overlay textarea\r\n        document.getElementById('createSub'+todo.id).children[0].children[2].children[0].focus();\r\n    }\r\n    return (\r\n        <div className=\"todo\" style={{ background: theme.bgColor, color: theme.todoColor}}>\r\n            <div className=\"overlayContainer\">\r\n                <div id={'overlay'+todo.id}>\r\n                    <TodoOverlay todo={todo}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"overlayContainer\">\r\n                <div id={'createSub'+todo.id}>\r\n                    <AddSubTodo id={todo.id}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"mainTodo\">     \r\n                <div className='todoContainer' style={{ background: theme.bgColor, color: theme.todoColor}}>\r\n                    <span className=\"dragBtn\" onClick={addSubTodo}></span>\r\n                    <span className='todoContent' onClick={overlayOn}>{todo.content}</span> \r\n                    <span className=\"deleteBtn\" onClick={() => dispatch({type: 'DELETE_TODO', id: todo.id})}>\r\n                        &times;\r\n                    </span>\r\n                </div>  \r\n            </div>\r\n            <SubTodoList subTodos={todo.subTodos} mainId={todo.id}/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TodoDetails;","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport TodoDetails from './TodoDetails';\r\n\r\nconst TodoList = () => {\r\n    const {todos} = useContext(TodoContext);\r\n    return todos.length ? (\r\n        <div className=\"todoList\">\r\n            {todos.map(todo => {\r\n                return (<TodoDetails todo={todo} key={todo.id}/>);\r\n            })}\r\n        </div>\r\n    ) : (\r\n        <div className='todo center'>/ / /</div>\r\n    );\r\n}\r\n \r\nexport default TodoList;","import React, { useState } from 'react';\r\nimport AddTodo from './components/AddTodo';\r\nimport ThemeContextProvider from './contexts/ThemeContext';\r\nimport ThemeToggle from './components/ThemeToggle';\r\nimport TodoList from './components/TodoList';\r\nimport TodoContextProvider from './contexts/TodoContext';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"todoApp\">\r\n      <ThemeContextProvider>\r\n        <h1>To dos</h1>\r\n        <ThemeToggle/>\r\n        <TodoContextProvider>\r\n          <div className=\"container\">\r\n            <TodoList/>\r\n          </div>\r\n          <AddTodo/>\r\n        </TodoContextProvider>\r\n      </ThemeContextProvider>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}